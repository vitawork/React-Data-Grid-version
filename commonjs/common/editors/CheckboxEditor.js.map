{"version":3,"file":"CheckboxEditor.js","sourceRoot":"","sources":["../../../src/common/editors/CheckboxEditor.tsx"],"names":[],"mappings":";;;AAAA,wDAA0B;AAU1B,SAAwB,cAAc,CAAI,EAAkE;QAAhE,gBAAK,EAAE,kBAAM,EAAE,kBAAM,EAAE,oCAAe;IAChF,SAAS,YAAY,CAAC,KAA0C;QAC9D,IAAI,MAAM,CAAC,YAAY,EAAE;YACvB,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;SACjE;IACH,CAAC;IAED,OAAO,CACL,yCAAO,SAAS,EAAC,8CAA8C;QAC7D,yCACE,IAAI,EAAC,UAAU,EACf,SAAS,EAAC,qBAAqB,EAC/B,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,KAAK,KAAK,IAAI,GACvB;QACF,wCAAM,SAAS,EAAC,2BAA2B,GAAG,CACxC,CACT,CAAC;AACJ,CAAC;AAlBD,iCAkBC","sourcesContent":["import React from 'react';\nimport { CalculatedColumn } from '../types';\n\nexport interface CheckboxEditorProps<R> {\n  value?: boolean;\n  rowIdx: number;\n  column: CalculatedColumn<R>;\n  dependentValues: unknown;\n}\n\nexport default function CheckboxEditor<R>({ value, rowIdx, column, dependentValues }: CheckboxEditorProps<R>) {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (column.onCellChange) {\n      column.onCellChange(rowIdx, column.key, dependentValues, event);\n    }\n  }\n\n  return (\n    <label className=\"react-grid-checkbox-container checkbox-align\">\n      <input\n        type=\"checkbox\"\n        className=\"react-grid-checkbox\"\n        onChange={handleChange}\n        checked={value === true}\n      />\n      <span className=\"react-grid-checkbox-label\" />\n    </label>\n  );\n}\n"]}