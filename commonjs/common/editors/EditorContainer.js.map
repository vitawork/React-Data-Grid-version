{"version":3,"file":"EditorContainer.js","sourceRoot":"","sources":["../../../src/common/editors/EditorContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { KeyboardEvent } from 'react';\nimport classNames from 'classnames';\nimport { isElement, isValidElementType } from 'react-is';\n\nimport { CalculatedColumn, Editor, EditorProps, CommitEvent, Dimension, Omit } from '../types';\nimport SimpleTextEditor from './SimpleTextEditor';\nimport ClickOutside from './ClickOutside';\nimport { InteractionMasksProps, InteractionMasksState } from '../../masks/InteractionMasks';\n\ntype SharedInteractionMasksProps<R> = Pick<InteractionMasksProps<R>, 'scrollLeft' | 'scrollTop'>;\ntype SharedInteractionMasksState = Pick<InteractionMasksState, 'firstEditorKeyPress'>;\n\ntype ValueType<R> = R[keyof R];\n\nexport interface Props<R> extends SharedInteractionMasksProps<R>, SharedInteractionMasksState, Omit<Dimension, 'zIndex'> {\n  rowIdx: number;\n  rowData: R;\n  value: ValueType<R>;\n  column: CalculatedColumn<R>;\n  onGridKeyDown?(e: KeyboardEvent): void;\n  onCommit(e: CommitEvent<R>): void;\n  onCommitCancel(): void;\n}\n\ninterface State {\n  isInvalid: boolean;\n}\n\nexport default class EditorContainer<R> extends React.Component<Props<R>, State> {\n  static displayName = 'EditorContainer';\n\n  changeCommitted = false;\n  changeCanceled = false;\n\n  private readonly editor = React.createRef<Editor>();\n  readonly state: Readonly<State> = { isInvalid: false };\n\n  componentDidMount() {\n    const inputNode = this.getInputNode();\n    if (inputNode instanceof HTMLElement) {\n      inputNode.focus();\n      if (!this.getEditor().disableContainerStyles) {\n        inputNode.className += ' editor-main';\n        inputNode.style.height = `${this.props.height - 1}px`;\n      }\n    }\n    if (inputNode instanceof HTMLInputElement) {\n      inputNode.select();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<R>) {\n    if (prevProps.scrollLeft !== this.props.scrollLeft || prevProps.scrollTop !== this.props.scrollTop) {\n      this.commitCancel();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.changeCommitted && !this.changeCanceled) {\n      this.commit({ key: 'Enter' });\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent<HTMLElement>) => {\n    switch (e.key) {\n      case 'Enter':\n        this.onPressEnter();\n        break;\n      case 'Tab':\n        this.onPressTab();\n        break;\n      case 'Escape':\n        this.onPressEscape(e);\n        break;\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.onPressArrowUpOrDown(e);\n        break;\n      case 'ArrowLeft':\n        this.onPressArrowLeft(e);\n        break;\n      case 'ArrowRight':\n        this.onPressArrowRight(e);\n        break;\n      default:\n        break;\n    }\n\n    if (this.props.onGridKeyDown) {\n      this.props.onGridKeyDown(e);\n    }\n  };\n\n  createEditor() {\n    type P = EditorProps<ValueType<R> | string, unknown, R>;\n    const editorProps: P & { ref: React.RefObject<Editor> } = {\n      ref: this.editor,\n      column: this.props.column,\n      value: this.getInitialValue(),\n      rowMetaData: this.getRowMetaData(),\n      rowData: this.props.rowData,\n      height: this.props.height,\n      onCommit: this.commit,\n      onCommitCancel: this.commitCancel,\n      onBlur: this.commit,\n      onOverrideKeyDown: this.onKeyDown\n    };\n\n    const CustomEditor = this.props.column.editor as React.ComponentType<P>;\n    // return custom column editor or SimpleEditor if none specified\n    if (isElement(CustomEditor)) {\n      return React.cloneElement(CustomEditor, editorProps);\n    }\n    if (isValidElementType(CustomEditor)) {\n      return <CustomEditor {...editorProps} />;\n    }\n\n    return (\n      <SimpleTextEditor\n        ref={this.editor as unknown as React.RefObject<SimpleTextEditor>}\n        column={this.props.column as CalculatedColumn<unknown>}\n        value={this.getInitialValue() as string}\n        onBlur={this.commit}\n      />\n    );\n  }\n\n  onPressEnter = () => {\n    this.commit({ key: 'Enter' });\n  };\n\n  onPressTab = () => {\n    this.commit({ key: 'Tab' });\n  };\n\n  onPressEscape = (e: KeyboardEvent) => {\n    if (!this.editorIsSelectOpen()) {\n      this.commitCancel();\n    } else {\n      // prevent event from bubbling if editor has results to select\n      e.stopPropagation();\n    }\n  };\n\n  onPressArrowUpOrDown = (e: KeyboardEvent) => {\n    if (this.editorHasResults()) {\n      // dont want to propogate as that then moves us round the grid\n      e.stopPropagation();\n    } else {\n      this.commit(e);\n    }\n  };\n\n  onPressArrowLeft = (e: KeyboardEvent) => {\n    // prevent event propogation. this disables left cell navigation\n    if (!this.isCaretAtBeginningOfInput()) {\n      e.stopPropagation();\n    } else {\n      this.commit(e);\n    }\n  };\n\n  onPressArrowRight = (e: KeyboardEvent) => {\n    // prevent event propogation. this disables right cell navigation\n    if (!this.isCaretAtEndOfInput()) {\n      e.stopPropagation();\n    } else {\n      this.commit(e);\n    }\n  };\n\n  editorHasResults = () => {\n    const { hasResults } = this.getEditor();\n    return hasResults ? hasResults() : false;\n  };\n\n  editorIsSelectOpen = () => {\n    const { isSelectOpen } = this.getEditor();\n    return isSelectOpen ? isSelectOpen() : false;\n  };\n\n  getRowMetaData() {\n    // clone row data so editor cannot actually change this\n    // convention based method to get corresponding Id or Name of any Name or Id property\n    if (this.props.column.getRowMetaData) {\n      return this.props.column.getRowMetaData(this.props.rowData, this.props.column);\n    }\n  }\n\n  getEditor = () => {\n    return this.editor.current!;\n  };\n\n  getInputNode = () => {\n    return this.getEditor().getInputNode();\n  };\n\n  getInitialValue(): ValueType<R> | string {\n    const { firstEditorKeyPress: key, value } = this.props;\n    if (key === 'Delete' || key === 'Backspace') {\n      return '';\n    }\n    if (key === 'Enter') {\n      return value;\n    }\n\n    return key || value;\n  }\n\n  commit = (args: { key?: string } = {}) => {\n    const { onCommit } = this.props;\n    const updated = this.getEditor().getValue();\n    if (this.isNewValueValid(updated)) {\n      this.changeCommitted = true;\n      const cellKey = this.props.column.key;\n      onCommit({ cellKey, rowIdx: this.props.rowIdx, updated, key: args.key });\n    }\n  };\n\n  commitCancel = () => {\n    this.changeCanceled = true;\n    this.props.onCommitCancel();\n  };\n\n  isNewValueValid = (value: unknown) => {\n    const editor = this.getEditor();\n    if (editor.validate) {\n      const isValid = editor.validate(value);\n      this.setState({ isInvalid: !isValid });\n      return isValid;\n    }\n\n    return true;\n  };\n\n  isCaretAtBeginningOfInput = () => {\n    const inputNode = this.getInputNode();\n    return inputNode instanceof HTMLInputElement\n      && inputNode.selectionEnd === 0;\n  };\n\n  isCaretAtEndOfInput = () => {\n    const inputNode = this.getInputNode();\n    return inputNode instanceof HTMLInputElement\n      && inputNode.selectionStart === inputNode.value.length;\n  };\n\n  handleRightClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  renderStatusIcon() {\n    return this.state.isInvalid\n      && <span className=\"glyphicon glyphicon-remove form-control-feedback\" />;\n  }\n\n  render() {\n    const { width, height, left, top } = this.props;\n    const className = classNames('rdg-editor-container', {\n      'has-error': this.state.isInvalid === true\n    });\n\n    return (\n      <ClickOutside onClickOutside={this.commit}>\n        <div\n          className={className}\n          style={{ height, width, left, top }}\n          onKeyDown={this.onKeyDown}\n          onContextMenu={this.handleRightClick}\n        >\n          {this.createEditor()}\n          {this.renderStatusIcon()}\n        </div>\n      </ClickOutside>\n    );\n  }\n}\n"]}