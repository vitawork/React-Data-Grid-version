{"version":3,"file":"HeaderCell.js","sourceRoot":"","sources":["../src/HeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { isElement } from 'react-is';\nimport { isFrozen } from './ColumnUtils';\nimport { HeaderRowType } from './common/enums';\nimport { CalculatedColumn, HeaderRowProps } from './common/types';\n\nfunction SimpleCellRenderer<R>({ column, rowType }: HeaderRowProps<R>) {\n  const headerText = rowType === HeaderRowType.HEADER ? column.name : '';\n  return <div>{headerText}</div>;\n}\n\ninterface Props<R> {\n  renderer?: React.ReactElement | React.ComponentType<HeaderRowProps<R>>;\n  column: CalculatedColumn<R>;\n  rowType: HeaderRowType;\n  height: number;\n  onResize(column: CalculatedColumn<R>, width: number): void;\n  onResizeEnd(column: CalculatedColumn<R>, width: number): void;\n  onHeaderDrop?(): void;\n  draggableHeaderCell?: React.ComponentType<{ column: CalculatedColumn<R>; onHeaderDrop(): void }>;\n  className?: string;\n}\n\nexport default class HeaderCell<R> extends React.Component<Props<R>> {\n  private readonly cell = React.createRef<HTMLDivElement>();\n\n  private onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - event.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    const onMouseMove = (event: MouseEvent) => {\n      this.onResize(event.clientX + offset);\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n      this.onResizeEnd(event.clientX + offset);\n    };\n\n    event.preventDefault();\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  };\n\n  private onTouchStart = (event: React.TouchEvent) => {\n    const touch = event.changedTouches[0];\n    const { identifier } = touch;\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - touch.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    function getTouch(event: TouchEvent) {\n      for (const touch of event.changedTouches) {\n        if (touch.identifier === identifier) return touch;\n      }\n      return null;\n    }\n\n    const onTouchMove = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (touch) {\n        this.onResize(touch.clientX + offset);\n      }\n    };\n\n    const onTouchEnd = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (!touch) return;\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n      this.onResizeEnd(touch.clientX + offset);\n    };\n\n    window.addEventListener('touchmove', onTouchMove);\n    window.addEventListener('touchend', onTouchEnd);\n  };\n\n  private onResize(x: number) {\n    const { onResize } = this.props;\n    if (onResize) {\n      const width = this.getWidthFromMouseEvent(x);\n      if (width > 0) {\n        onResize(this.props.column, width);\n      }\n    }\n  }\n\n  private onResizeEnd(x: number) {\n    const width = this.getWidthFromMouseEvent(x);\n    this.props.onResizeEnd(this.props.column, width);\n  }\n\n  private getWidthFromMouseEvent(x: number): number {\n    return x - this.cell.current!.getBoundingClientRect().left;\n  }\n\n  getCell() {\n    const { height, column, rowType } = this.props;\n    const renderer = this.props.renderer || SimpleCellRenderer;\n    if (isElement(renderer)) {\n      // if it is a string, it's an HTML element, and column is not a valid property, so only pass height\n      if (typeof renderer.type === 'string') {\n        return React.cloneElement(renderer, { height });\n      }\n      return React.cloneElement(renderer, { column, height });\n    }\n    return React.createElement(renderer, { column, rowType });\n  }\n\n  setScrollLeft(scrollLeft: number) {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = `translateX(${scrollLeft}px)`;\n    }\n  }\n\n  removeScroll() {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = 'none';\n    }\n  }\n\n  render() {\n    const { column, rowType, height } = this.props;\n\n    const className = classNames('react-grid-HeaderCell', {\n      'rdg-header-cell-resizable': column.resizable,\n      'react-grid-HeaderCell--frozen': isFrozen(column)\n    }, this.props.className, column.cellClass);\n\n    const style: React.CSSProperties = {\n      width: column.width,\n      left: column.left,\n      height\n    };\n\n    const cell = (\n      <div\n        className={className}\n        style={style}\n        ref={this.cell}\n        onMouseDown={column.resizable ? this.onMouseDown : undefined}\n        onTouchStart={column.resizable ? this.onTouchStart : undefined}\n      >\n        {this.getCell()}\n      </div>\n    );\n\n    const DraggableHeaderCell = this.props.draggableHeaderCell;\n    if (rowType === HeaderRowType.HEADER && column.draggable && DraggableHeaderCell) {\n      return (\n        <DraggableHeaderCell\n          column={column}\n          onHeaderDrop={this.props.onHeaderDrop!}\n        >\n          {cell}\n        </DraggableHeaderCell>\n      );\n    }\n\n    return cell;\n  }\n}\n"]}